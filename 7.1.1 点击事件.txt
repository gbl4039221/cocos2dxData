.h    CCArray * pc_movableSprites;    Sprite *pc_selSprite;        virtual void onEnter(); //1        virtual void onExit();  //3
    virtual bool onTouchBegan(Touch* touch, Event  *event);    virtual void onTouchMoved(Touch *touch, Event *event);//移动    void selectSpriteForTouch(Vec2 touchLocation);//触碰事件    void panForTranslation(Vec2 translation);//移动事件    virtual void onTouchEnded(Touch *touch,Event *event); //结束.cppvoid test01::onEnter(){    //注册监听   1.dele类，2.优先级，3.YES为阻碍其他类的move 和 end    this->setTouchEnabled(true);    setTouchMode(Touch::DispatchMode::ONE_BY_ONE);    CCLayer::onEnter();}void test01::onExit(){    //移除监听//    CCDirector::sharedDirector()->getTouchDispatcher()->removeDelegate(this);   //不怎么会用这处，离开页不会移除。    CCLayer::onExit();}bool test01::onTouchBegan(cocos2d::Touch *touch, cocos2d::Event *event)//点击{    Vec2 touchLocation = this->convertTouchToNodeSpace(touch);        for (int i = 0; i<pc_movableSprites->count(); i++)    {        Sprite *sprite = (Sprite*)pc_movableSprites->getObjectAtIndex(i);        if (sprite->boundingBox().containsPoint(touchLocation))        {            this->selectSpriteForTouch(touchLoca tion);            return true;        }    }    return false;}void test01::onTouchMoved(cocos2d::Touch *touch, cocos2d::Event *event)//移动{    Vec2 touchLocation = this->convertTouchToNodeSpace(touch);    Vec2 oldTouchLocation = touch->getPreviousLocationInView();    oldTouchLocation = CCDirector::getInstance()->convertToGL(oldTouchLocation);    oldTouchLocation = this->convertToNodeSpace(oldTouchLocation);    Vec2 tranlation = (touchLocation-oldTouchLocation);    this->panForTranslation(tranlation);}void test01::panForTranslation(Vec2 translation){    Vec2 newPos = (pc_selSprite->getPosition()+translation);    pc_selSprite->setPosition(newPos);}void test01::selectSpriteForTouch(Vec2 touchLocation){    for (int i = 0; i<pc_movableSprites->count(); i++)    {        auto *sprite = (Sprite*)pc_movableSprites->getObjectAtIndex(i);        if (sprite->boundingBox().containsPoint(touchLocation))        {            pc_selSprite = sprite;                        if (pc_selSprite->getTag()==1001)            {                ScaleTo* aaaa=CCScaleTo::create(3, 0.5);                pc_selSprite->runAction(aaaa);            }            else if(pc_selSprite->getTag()==1002)            {                MoveBy * aaa=CCMoveBy::create(2, Vec2(300,300));                pc_selSprite->runAction(aaa);            }        }            }    }